"""crea schema iniziale per postgresql

Revision ID: 17e5f4072d6d
Revises: 
Create Date: 2025-05-24 11:30:29.591587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '17e5f4072d6d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('aziende',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('nome_azienda', sa.String(length=255), nullable=False),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('partita_iva_azienda', sa.String(length=50), nullable=False),
    sa.Column('codice_fiscale_azienda', sa.String(length=50), nullable=True),
    sa.Column('indirizzo_via', sa.String(length=255), nullable=False),
    sa.Column('indirizzo_cap', sa.String(length=10), nullable=False),
    sa.Column('indirizzo_citta', sa.String(length=100), nullable=False),
    sa.Column('indirizzo_provincia', sa.String(length=50), nullable=False),
    sa.Column('indirizzo_nazione', sa.String(length=100), nullable=True),
    sa.Column('email_azienda', sa.String(length=255), nullable=False),
    sa.Column('telefono_azienda', sa.String(length=50), nullable=True),
    sa.Column('sito_web_azienda', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_aziende_id'), 'aziende', ['id'], unique=False)
    op.create_table('preventivi',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('numero_preventivo', sa.String(length=100), nullable=False),
    sa.Column('oggetto_preventivo', sa.String(length=500), nullable=False),
    sa.Column('stato_preventivo', sa.String(length=50), nullable=True),
    sa.Column('dati_preventivo', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_preventivi_id'), 'preventivi', ['id'], unique=False)
    op.create_index(op.f('ix_preventivi_numero_preventivo'), 'preventivi', ['numero_preventivo'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_preventivi_numero_preventivo'), table_name='preventivi')
    op.drop_index(op.f('ix_preventivi_id'), table_name='preventivi')
    op.drop_table('preventivi')
    op.drop_index(op.f('ix_aziende_id'), table_name='aziende')
    op.drop_table('aziende')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
