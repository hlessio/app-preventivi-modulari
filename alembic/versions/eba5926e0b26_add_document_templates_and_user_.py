"""Add document templates and user preferences

Revision ID: eba5926e0b26
Revises: 17e5f4072d6d
Create Date: 2025-05-24 12:56:31.101269

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eba5926e0b26'
down_revision: Union[str, None] = '17e5f4072d6d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('document_type', sa.String(length=100), nullable=False),
    sa.Column('module_composition', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('page_format', sa.String(length=50), nullable=True),
    sa.Column('page_orientation', sa.String(length=20), nullable=True),
    sa.Column('margins', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('custom_styles', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_templates_id'), 'document_templates', ['id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('default_page_format', sa.String(length=50), nullable=True),
    sa.Column('default_orientation', sa.String(length=20), nullable=True),
    sa.Column('preferred_language', sa.String(length=10), nullable=True),
    sa.Column('default_document_template_id', sa.UUID(), nullable=True),
    sa.Column('auto_save_interval', sa.Integer(), nullable=True),
    sa.Column('allow_public_templates', sa.Boolean(), nullable=True),
    sa.Column('data_retention_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['default_document_template_id'], ['document_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.add_column('preventivi', sa.Column('template_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'preventivi', 'document_templates', ['template_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'preventivi', type_='foreignkey')
    op.drop_column('preventivi', 'template_id')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_document_templates_id'), table_name='document_templates')
    op.drop_table('document_templates')
    # ### end Alembic commands ###
